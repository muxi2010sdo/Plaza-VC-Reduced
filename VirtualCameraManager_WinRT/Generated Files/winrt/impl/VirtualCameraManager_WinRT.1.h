// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220608.4

#pragma once
#ifndef WINRT_VirtualCameraManager_WinRT_1_H
#define WINRT_VirtualCameraManager_WinRT_1_H
#include "winrt/impl/VirtualCameraManager_WinRT.0.h"
WINRT_EXPORT namespace winrt::VirtualCameraManager_WinRT
{
    struct __declspec(empty_bases) IAugmentedMediaSourceCustomPropertyPayload :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAugmentedMediaSourceCustomPropertyPayload>,
        impl::require<winrt::VirtualCameraManager_WinRT::IAugmentedMediaSourceCustomPropertyPayload, winrt::VirtualCameraManager_WinRT::IPropertyPayload>
    {
        IAugmentedMediaSourceCustomPropertyPayload(std::nullptr_t = nullptr) noexcept {}
        IAugmentedMediaSourceCustomPropertyPayload(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICustomCameraKsPropertyInquiry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomCameraKsPropertyInquiry>
    {
        ICustomCameraKsPropertyInquiry(std::nullptr_t = nullptr) noexcept {}
        ICustomCameraKsPropertyInquiry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICustomCameraKsPropertyInquiryStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomCameraKsPropertyInquiryStatics>
    {
        ICustomCameraKsPropertyInquiryStatics(std::nullptr_t = nullptr) noexcept {}
        ICustomCameraKsPropertyInquiryStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPropertyPayload :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPropertyPayload>
    {
        IPropertyPayload(std::nullptr_t = nullptr) noexcept {}
        IPropertyPayload(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISimpleCustomPropertyPayload :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISimpleCustomPropertyPayload>
    {
        ISimpleCustomPropertyPayload(std::nullptr_t = nullptr) noexcept {}
        ISimpleCustomPropertyPayload(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IVirtualCameraProxy :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualCameraProxy>
    {
        IVirtualCameraProxy(std::nullptr_t = nullptr) noexcept {}
        IVirtualCameraProxy(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IVirtualCameraProxyFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualCameraProxyFactory>
    {
        IVirtualCameraProxyFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualCameraProxyFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IVirtualCameraRegistrar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualCameraRegistrar>
    {
        IVirtualCameraRegistrar(std::nullptr_t = nullptr) noexcept {}
        IVirtualCameraRegistrar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IVirtualCameraRegistrarStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualCameraRegistrarStatics>
    {
        IVirtualCameraRegistrarStatics(std::nullptr_t = nullptr) noexcept {}
        IVirtualCameraRegistrarStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
