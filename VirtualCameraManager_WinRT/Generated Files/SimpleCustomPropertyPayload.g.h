// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220608.4

#pragma once
#include "winrt/VirtualCameraManager_WinRT.h"
namespace winrt::VirtualCameraManager_WinRT::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) SimpleCustomPropertyPayload_base : implements<D, VirtualCameraManager_WinRT::SimpleCustomPropertyPayload, I...>
    {
        using base_type = SimpleCustomPropertyPayload_base;
        using class_type = VirtualCameraManager_WinRT::SimpleCustomPropertyPayload;
        using implements_type = typename SimpleCustomPropertyPayload_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"VirtualCameraManager_WinRT.SimpleCustomPropertyPayload";
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_SIMPLECUSTOMPROPERTYPAYLOAD_XAML_G_H) || __has_include("SimpleCustomPropertyPayload.xaml.g.h")

#include "SimpleCustomPropertyPayload.xaml.g.h"

#else

namespace winrt::VirtualCameraManager_WinRT::implementation
{
    template <typename D, typename... I>
    using SimpleCustomPropertyPayloadT = SimpleCustomPropertyPayload_base<D, I...>;
}

#endif
