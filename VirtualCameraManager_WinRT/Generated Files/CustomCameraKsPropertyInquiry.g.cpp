// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220608.4

void* winrt_make_VirtualCameraManager_WinRT_CustomCameraKsPropertyInquiry()
{
    return winrt::detach_abi(winrt::make<winrt::VirtualCameraManager_WinRT::factory_implementation::CustomCameraKsPropertyInquiry>());
}
WINRT_EXPORT namespace winrt::VirtualCameraManager_WinRT
{
    winrt::VirtualCameraManager_WinRT::ISimpleCustomPropertyPayload CustomCameraKsPropertyInquiry::GetSimpleCustomControl(winrt::VirtualCameraManager_WinRT::SimpleCustomControlKind const& customControlKind, winrt::Windows::Media::Devices::VideoDeviceController const& controller)
    {
        return VirtualCameraManager_WinRT::implementation::CustomCameraKsPropertyInquiry::GetSimpleCustomControl(customControlKind, controller);
    }
    void CustomCameraKsPropertyInquiry::SetSimpleCustomControlFlags(winrt::VirtualCameraManager_WinRT::SimpleCustomControlKind const& customControlKind, winrt::Windows::Media::Devices::VideoDeviceController const& controller, uint32_t flags)
    {
        VirtualCameraManager_WinRT::implementation::CustomCameraKsPropertyInquiry::SetSimpleCustomControlFlags(customControlKind, controller, flags);
    }
    winrt::VirtualCameraManager_WinRT::IAugmentedMediaSourceCustomPropertyPayload CustomCameraKsPropertyInquiry::GetAugmentedMediaSourceCustomControl(winrt::VirtualCameraManager_WinRT::AugmentedMediaSourceCustomControlKind const& controlKind, winrt::Windows::Media::Devices::VideoDeviceController const& controller)
    {
        return VirtualCameraManager_WinRT::implementation::CustomCameraKsPropertyInquiry::GetAugmentedMediaSourceCustomControl(controlKind, controller);
    }
    void CustomCameraKsPropertyInquiry::SetAugmentedMediaSourceCustomControlFlags(winrt::VirtualCameraManager_WinRT::AugmentedMediaSourceCustomControlKind const& controlKind, winrt::Windows::Media::Devices::VideoDeviceController const& controller, uint64_t flags)
    {
        VirtualCameraManager_WinRT::implementation::CustomCameraKsPropertyInquiry::SetAugmentedMediaSourceCustomControlFlags(controlKind, controller, flags);
    }
}
